    1.volatile
        volatile是java虚拟机提供的轻量级的同步机制，他只能保持变量的可见性，既保证线程所见的变量的值是最新的值，但它并不保证变量的原子性，既所有写操作并非
    是安全的，使用synchronized或者原子类来保证原子性，所以说他是java提供的轻量级的同步机制。

        volatile使用场景：
        1）运算结果并不依赖当前值，或者只有单一的线程能修改变量的值。
        2）变量不需要与其他状态变量共同参与不变约束。

        volatile第二重语义是禁止指令重排序优化，

        java内存模型中对volatile变量的read,load,user,assign,store,write的操作时必须满足以下规则：
        1）只有当线程T对变量V执行的前一个动作是load动作时，线程T才能对变量V执行use动作；并且只有当线程T对变量V执行的后一个动作是use的时候，线程T才能对变量
    V执行load动作。这就是说，线程T对变量V的use动作可以认为是和线程T对变量V的load动作相关联，必须一起出现（这条规则就是要求线程T对变量V所读取的值是最新的值）
        2）只有当线程T对变量V执行的前一个动作是assign动作时，线程T才能变量V执行store动作；并且只有当线程T对变量V执行的后一个动作是store的时候，线程T才能对
    变量V执行assign动作。这就是说，线程T对变量V的assign动作是和线程T对变量V执行的store动作相关联的，必须一起出现（这条规则保证，线程T对变量V的任何assign动
    作，可以立即同步至主内存之中，可以保证其他线程立即看到自己对变量V所做的修改）。
        3）禁止指令重排序。